apiVersion: apps/v1
kind: Deployment
metadata:
  name: cyberstore-app
  namespace: cyberstore
  labels:
    app: cyberstore
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: cyberstore
  template:
    metadata:
      labels:
        app: cyberstore
    spec:
      containers:
      - name: cyberstore
        image: cyberstore:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: NODE_ENV
          value: "production"

---
apiVersion: v1
kind: Service
metadata:
  name: cyberstore-service
  namespace: cyberstore
spec:
  selector:
    app: cyberstore
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cyberstore-ingress
  namespace: cyberstore
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - cyberstore.example.com
    secretName: cyberstore-tls
  rules:
  - host: cyberstore.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cyberstore-service
            port:
              number: 80